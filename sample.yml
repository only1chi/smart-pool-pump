name: SmartPoolTimer
version: "1.1"
arch: esp32
author: Chizuruoke Chikwendu <only1chi@gmail.com>
description: Smart Pool Timer Controller, integrates AWS shadow, BMP180 and ADE7912

libs_version: ${mos.version}
modules_version: ${mos.version}
mongoose_os_version: ${mos.version}

sources:
  - src
  - https://github.com/cesanta/esp-idf/tree/master/components/driver/include

filesystem:
  - fs

extra_files: []
ffi_symbols: []

config_schema:
  # Custom Definition
  - ["spt", "o", {"title": "Smart Pool Timer Settings"}]
  - ["spt.serial_num", "s", "N/A", {"title": "Device Serial Number"}]
  - ["spt.sw_version", "s", "1.1", {"title": "Device firmware version"}]
  - ["spt.activated", "b", false, {"title": "Device Activation State"}]
  - ["spt.timer", "o", {title: "Pump Timer"}]
  - ["spt.timer.start", "i", 0, {title: "pump timer start time"}]
  - ["spt.timer.stop", "i", 0, {title: "pump timer stop time"}]
  - ["spt.schedule", "o", {title: "Daily Pump Schedule"}]
  - ["spt.schedule.start", "i", 0, {title: "pump schedule start time"}]
  - ["spt.schedule.stop", "i", 0, {title: "pump schedule stop time"}]

  # Timezone Details
  # Eastern Standard Time is 5 hours earlier than Coordinated Universal Time (UTC).
  # Standard time and daylight saving time both apply to this locale.
  # Eastern Daylight Time (EDT) is one hour ahead of standard time.
  # Daylight saving time starts on the first (1) Sunday (0) of April (4) at 2:00 A.M., and ends on the last (5) Sunday (0) of October (10) at 2:00 A.M.
  # - ["sys.tz_spec", "s", "EST5EDT4,M4.1.0/02:00:00,M10.5.0/02:00:00", {title: "See formats for the TZ env var: \"man tzset\". Formats like \":/path/to/file\" are not supported"}]
  - ["sys.tz_spec", "s", "UTC0", {title: "See formats for the TZ env var: \"man tzset\". Formats like \":/path/to/file\" are not supported"}]

  # Enable I2C
  - ["i2c.enable", true]
  - ["i2c.freq", 100000]
  - ["i2c.unit_no", 1]
  - ["i2c.sda_gpio", 2]
  - ["i2c.scl_gpio", 0]

  # Enable SPI
  - ["spi.enable", "b", true, {"title": "Enable SPI"}]
  - ["spi.freq", "i", 1000000, {"title": "SPI clock frequency"}]
  - ["spi.mode", "i", 3, {"title": "SPI edge/clock idle mode, 0-3"}]
  - ["spi.msb_first", "b", true, {"title": "SPI bit order: MSB first / LSB first"}]
  - ["spi.debug", "b", false, {"title": "Debug SPI bus activity"}]
  - ["spi.unit_no", "i", 3, {title: "Which SPI unit to use, 2 or 3"}]
  - ["spi.miso_gpio", "i", 19, {title: "GPIO to use for MISO"}]
  - ["spi.mosi_gpio", "i", 23, {title: "GPIO to use for MOSI"}]
  - ["spi.sclk_gpio", "i", 18, {title: "GPIO to use for SCLK"}]
  - ["spi.cs0_gpio", "i", 5, {title: "GPIO to use for CS0"}]

  # Enable AP Mode
  - ["wifi.ap.enable", true]
  - ["wifi.ap.ssid", "ESP32_??????"]
  - ["wifi.ap.pass", "password"]
  - ["wifi.ap.hidden", false]
  - ["wifi.ap.channel", 6]
  - ["wifi.ap.max_connections", 4]
  - ["wifi.ap.ip", "192.168.5.1"]
  - ["wifi.ap.netmask", "255.255.255.0"]
  - ["wifi.ap.gw", "192.168.5.1"]
  - ["wifi.ap.dhcp_start", "192.168.5.2"]
  - ["wifi.ap.dhcp_end", "192.168.5.100"]
  - ["wifi.ap.keep_enabled", "b", true, {"title": "Keep AP enabled when station is on"}]

  # Enable Station Mode
  - ["wifi.sta.enable", "b", true, {title: "Connect to existing WiFi station 0"}]
  - ["wifi.sta.ssid", "s", "ssid", {title: "SSID"}]
  - ["wifi.sta.pass", "s", "pswd", {title: "Password", type: "password"}]
  - ["wifi.sta1.enable", "b", true, {title: "Connect to existing WiFi station 1"}]
  - ["wifi.sta1.ssid", "s", "ssid1", {title: "SSID"}]
  - ["wifi.sta1.pass", "s", "pswd1", {title: "Password", type: "password"}]
  - ["wifi.sta2.enable", "b", false, {title: "Connect to existing WiFi station 2"}]
  - ["wifi.sta_cfg_idx", "i", 0, {title: "Station config index to start connecting with, 0, 1 or 2"}]
  - ["wifi.sta_connect_timeout", "i", 10, {title: "Timeout for connection, seconds."}]

  # Enable MQTT
  - ["mqtt.enable", true]
  - ["mqtt.server", "s", "xxxxxxxxxxxxxx.iot.us-east-1.amazonaws.com:8883", {title: "MQTT server"}]
  - ["mqtt.ssl_ca_cert", "s", "xxxxxxxxxx.pem", {title: "Verify server certificate using this CA bundle"}]
  - ["mqtt.ssl_cert", "s", "xxxxxxxxxx-certificate.pem", {title: "Client certificate to present to the server"}]
  - ["mqtt.ssl_key", "s", "xxxxxxxxxx-private.pem.key", {title: "Private key corresponding to the certificate"}]

  # AWS SHADOW
  # - ["aws", "o", {title: "AWS settings"}]
  - ["aws.thing_name", "s", "", {title: "Set thing name. If not specified, device.id is used"}]
  - ["shadow.enable", true]
  - ["shadow.lib", "s", "", {title: "Preferred shadow lib, e.g. aws, dash, gcp"}]

  # SNTP Servier
  - ["sntp.enable", "b", true, {title: "Enable SNTP"}]
  - ["sntp.server", "s", "time.google.com", {title: "Server address"}]
  - ["sntp.retry_min", "i", 1, {title: "Minimum retry interval"}]
  - ["sntp.retry_max", "i", 30, {title: "Maximum retry interval"}]
  - ["sntp.update_interval", "i", 7200, {title: "Update interval. If 0, performs a one-off sync"}]

  # BT Service Config
  # - ["bt.enable", "b", true, {title: "Enable BT"}]
  # - ["bt.config_svc_enable", "b", true, {title: "Enable the config service"}]

libs:
  - origin: https://github.com/mongoose-os-libs/aws  
  - origin: https://github.com/mongoose-os-libs/adc
  # - origin: https://github.com/mongoose-os-libs/bt-common
  - origin: https://github.com/mongoose-os-libs/http-server
  - origin: https://github.com/mongoose-os-libs/ota-http-server
  - origin: https://github.com/mongoose-os-libs/rpc-loopback
  - origin: https://github.com/mongoose-os-libs/mongoose
  - origin: https://github.com/mongoose-os-libs/rpc-mqtt
  - origin: https://github.com/mongoose-os-libs/rpc-service-config
  - origin: https://github.com/mongoose-os-libs/rpc-service-fs
  - origin: https://github.com/mongoose-os-libs/rpc-service-gpio
  - origin: https://github.com/mongoose-os-libs/rpc-service-i2c
  - origin: https://github.com/mongoose-os-libs/rpc-service-ota
  - origin: https://github.com/mongoose-os-libs/rpc-uart
  - origin: https://github.com/mongoose-os-libs/shadow
  - origin: https://github.com/mongoose-os-libs/sntp
  - origin: https://github.com/mongoose-os-libs/spi
  - origin: https://github.com/mongoose-os-libs/vfs-dev-spi-flash
  - origin: https://github.com/mongoose-os-libs/wifi

 
build_vars:
  FS_SIZE: 262144		      		        # File System Size = 256K
  MGOS_ENABLE_I2C_GPIO: 0
  
  
cflags: []
cxxflags: []
cdefs: {}
tags:
  - c
  - wifi
  - aws
  - http
  - i2c
  - spi

libs_version: ""
modules_version: ""
conds: []
manifest_version: ""
skeleton_version: 2017-05-18
deps: []
libs_handled: []

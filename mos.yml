name: SmartPoolTimer
version: "1.0"
arch: esp32
author: Chizuruoke Chikwendu <only1chi@gmail.com>
description: Smart Pool Timer Controller, integrates AWS shadow, BMP180 and ADE7912
mongoose_os_version: ""
sources:
  - src
  - https://github.com/cesanta/esp-idf/tree/master/components/driver/include
filesystem:
  - fs
extra_files: []
ffi_symbols: []

config_schema:
  # Enable I2C
  - ["i2c.enable", true]
  - ["i2c.freq", 100000]
  - ["i2c.unit_no", 1]
  - ["i2c.sda_gpio", 2]
  - ["i2c.scl_gpio", 0]

  # Enable SPI
  - ["spi.enable", "b", true, {"title": "Enable SPI"}]
  - ["spi.freq", "i", 1000000, {"title": "SPI clock frequency"}]
  - ["spi.mode", "i", 3, {"title": "SPI edge/clock idle mode, 0-3"}]
  - ["spi.msb_first", "b", true, {"title": "SPI bit order: MSB first / LSB first"}]
  - ["spi.debug", "b", false, {"title": "Debug SPI bus activity"}]
  - ["spi.unit_no", "i", 3, {title: "Which SPI unit to use, 2 or 3"}]
  - ["spi.miso_gpio", "i", 19, {title: "GPIO to use for MISO"}]
  - ["spi.mosi_gpio", "i", 23, {title: "GPIO to use for MOSI"}]
  - ["spi.sclk_gpio", "i", 18, {title: "GPIO to use for SCLK"}]
  - ["spi.cs0_gpio", "i", 5, {title: "GPIO to use for CS0"}]

  # Enable AP Mode
  - ["wifi.ap.enable", true]
  - ["wifi.ap.ssid", "ESP32_??????"]
  - ["wifi.ap.pass", "password"]
  - ["wifi.ap.hidden", false]
  - ["wifi.ap.channel", 6]
  - ["wifi.ap.max_connections", 4]
  - ["wifi.ap.ip", "192.168.5.1"]
  - ["wifi.ap.netmask", "255.255.255.0"]
  - ["wifi.ap.gw", "192.168.5.1"]
  - ["wifi.ap.dhcp_start", "192.168.5.2"]
  - ["wifi.ap.dhcp_end", "192.168.5.100"]
  - ["wifi.ap.keep_enabled", "b", true, {"title": "Keep AP enabled when station is on"}]

  # Enable Station Mode
  - ["wifi.sta.enable", "b", true, {title: "Connect to existing WiFi"}]
  - ["wifi.sta.ssid", "s", "Your_SSID", {title: "SSID"}]
  - ["wifi.sta.pass", "s", "Your_PASSWORD", {title: "Password", type: "password"}]

  # Enable MQTT
  - ["mqtt.enable", true]
  - ["mqtt.server", "s", "xxxxxxxxxx.iot.xxxxxxxx.amazonaws.com:8883", {title: "MQTT server"}]
  - ["mqtt.ssl_ca_cert", "s", "rootCA.pem", {title: "Verify server certificate using this CA bundle"}]
  - ["mqtt.ssl_cert", "s", "your-certificate.pem", {title: "Client certificate to present to the server"}]
  - ["mqtt.ssl_key", "s", "your-private.pem.key", {title: "Private key corresponding to the certificate"}]

libs:
  - origin: https://github.com/mongoose-os-libs/aws  
  - origin: https://github.com/mongoose-os-libs/http-server
  - origin: https://github.com/mongoose-os-libs/ota-http-server
  - origin: https://github.com/mongoose-os-libs/rpc-loopback
  - origin: https://github.com/mongoose-os-libs/rpc-mqtt
  - origin: https://github.com/mongoose-os-libs/rpc-service-config
  - origin: https://github.com/mongoose-os-libs/rpc-service-fs
  - origin: https://github.com/mongoose-os-libs/rpc-service-gpio
  - origin: https://github.com/mongoose-os-libs/rpc-service-i2c
  - origin: https://github.com/mongoose-os-libs/rpc-service-ota
  - origin: https://github.com/mongoose-os-libs/rpc-uart
  - origin: https://github.com/mongoose-os-libs/spi
  - origin: https://github.com/mongoose-os-libs/vfs-dev-spi-flash

 
build_vars:
  FS_SIZE: 262144		      		        # File System Size = 256K
  MGOS_ENABLE_I2C_GPIO: 0
  
cflags: []
cxxflags: []
cdefs: {}
tags:
  - c
  - wifi
  - aws
  - http
  - i2c
  - spi

libs_version: ""
modules_version: ""
conds: []
manifest_version: ""
skeleton_version: 2017-05-18
deps: []
libs_handled: []
